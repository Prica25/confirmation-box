{"version":3,"file":"index.min.js","sources":["../src/ConfirmationBox.vue","../src/index.js"],"sourcesContent":["<template>\r\n  <v-dialog\r\n    @click:outside=\"clickOutsideFnc()\"\r\n    persistent\r\n    content-class=\"confirmation-box\"\r\n    v-model=\"isShow\"\r\n  >\r\n    <v-row class=\"ma-0 mt-2 justify-center\">\r\n      <v-col class=\"pa-0 text-center\">\r\n        <v-icon :color=\"dialog.color ? dialog.color : 'default'\" size=\"150\">{{\r\n          dialog.icon\r\n        }}</v-icon>\r\n        <h3 class=\"mt-2\">{{ dialog.title }}</h3>\r\n        <span v-if=\"dialog.message\">{{ dialog.message }}</span>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <v-row class=\"ma-0 mt-4 justify-center\">\r\n      <v-col\r\n        v-for=\"(button, index) in dialog.buttons\"\r\n        :key=\"'button-confirmation-' + index\"\r\n        class=\"pa-0 confirmation-button\"\r\n      >\r\n        <v-btn\r\n          :color=\"button.color\"\r\n          text\r\n          width=\"100%\"\r\n          @click=\"handleClick(button.result)\"\r\n          >{{ button.text }}</v-btn\r\n        >\r\n      </v-col>\r\n    </v-row>\r\n  </v-dialog>\r\n</template>\r\n<script>\r\nimport { VDialog, VRow, VCol, VIcon, VBtn } from 'vuetify/lib'\r\n\r\nexport default {\r\n  name: 'ConfirmationBox',\r\n  components: {\r\n    VDialog,\r\n    VRow,\r\n    VCol,\r\n    VIcon,\r\n    VBtn,\r\n  },\r\n  props: {\r\n    icon: {\r\n      type: String,\r\n      default: 'mdi-help-circle-outline',\r\n    },\r\n    color: {\r\n      type: String,\r\n      default: 'primary',\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: 'Are you sure?',\r\n    },\r\n    clickOutside: {\r\n      type: [Boolean, String, Number, Object],\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      isShow: false,\r\n      dialog: {\r\n        title: this.title,\r\n        color: this.color,\r\n        icon: this.icon,\r\n        message: '',\r\n        close: this.clickOutside,\r\n        buttons: [{ text: 'Ok', result: true, color: 'primary' }],\r\n      },\r\n      callback: () => {},\r\n      errorCallback: () => {},\r\n    }\r\n  },\r\n  methods: {\r\n    setCallback(fn) {\r\n      this.callback = fn\r\n    },\r\n    setErrorCallback(fn) {\r\n      this.errorCallback = fn\r\n    },\r\n    resetState() {\r\n      this.dialog = {\r\n        title: this.title,\r\n        color: this.color,\r\n        icon: this.icon,\r\n        message: '',\r\n        close: this.clickOutside,\r\n        buttons: [{ text: 'Ok', result: true, color: 'primary' }],\r\n      }\r\n    },\r\n    clickOutsideFnc() {\r\n      if (this.dialog.close !== null) {\r\n        this.handleClick(this.dialog.close)\r\n      }\r\n    },\r\n    handleClick(res) {\r\n      this.isShow = false\r\n      this.callback(res)\r\n    },\r\n    open(params) {\r\n      this.resetState()\r\n      Object.assign(this.dialog, params)\r\n      this.isShow = true\r\n    },\r\n  },\r\n}\r\n</script>\r\n<style>\r\n.confirmation-box {\r\n  width: 350px !important;\r\n  background-color: white;\r\n  border-radius: 25px !important;\r\n}\r\n.confirmation-box .v-icon::after {\r\n  height: unset !important;\r\n}\r\n.confirmation-button .v-btn {\r\n  border-radius: 0px;\r\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\r\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.confirmation-button:last-of-type .v-btn {\r\n  border-right: none;\r\n}\r\n</style>\r\n","import ConfirmationBox from './ConfirmationBox.vue'\r\n\r\nexport default {\r\n  install(Vue, vuetify, options = {}) {\r\n    if (this.installed) {\r\n      return\r\n    }\r\n    this.installed = true\r\n\r\n    this.options = options || {}\r\n\r\n    const Ctor = Vue.extend(Object.assign({}, { vuetify }, ConfirmationBox))\r\n\r\n    const box = (params) => {\r\n      const component = new Ctor(\r\n        Object.assign({}, ConfirmationBox, {\r\n          propsData: Object.assign({}, this.options),\r\n        })\r\n      )\r\n\r\n      if (typeof params === 'string') {\r\n        params = { message: params }\r\n      }\r\n\r\n      if (typeof params === 'object' && !Array.isArray(params)) {\r\n        const container =\r\n          document.querySelector('[data-app=true]') || document.body\r\n\r\n        return new Promise((resolve, reject) => {\r\n          component.setCallback((response) => {\r\n            container.removeChild(component.$el)\r\n            resolve(response)\r\n          })\r\n          component.setErrorCallback((error) => {\r\n            container.removeChild(component.$el)\r\n            reject(error)\r\n          })\r\n          container.appendChild(component.$mount().$el)\r\n          component.open(params)\r\n        })\r\n      }\r\n    }\r\n\r\n    Vue.prototype.$confirmationBox = box\r\n  },\r\n}\r\n"],"names":["install","Vue","vuetify","options","this","installed","Ctor","extend","Object","assign","ConfirmationBox","box","params","component","propsData","_this","message","_typeof","Array","isArray","container","document","querySelector","body","Promise","resolve","reject","setCallback","response","removeChild","$el","setErrorCallback","error","appendChild","$mount","open","prototype","$confirmationBox"],"mappings":"2dAqCA,41CAnCA,0hCCAe,CACbA,iBAAQC,EAAKC,cAASC,yDAAU,OAC1BC,KAAKC,gBAGJA,WAAY,OAEZF,QAAUA,GAAW,OAEpBG,EAAOL,EAAIM,OAAOC,OAAOC,OAAO,GAAI,CAAEP,QAAAA,GAAWQ,IAEjDC,EAAM,SAACC,OACLC,EAAY,IAAIP,EACpBE,OAAOC,OAAO,GAAIC,EAAiB,CACjCI,UAAWN,OAAOC,OAAO,GAAIM,EAAKZ,eAIhB,iBAAXS,IACTA,EAAS,CAAEI,QAASJ,IAGA,WAAlBK,EAAOL,KAAwBM,MAAMC,QAAQP,GAAS,KAClDQ,EACJC,SAASC,cAAc,oBAAsBD,SAASE,YAEjD,IAAIC,SAAQ,SAACC,EAASC,GAC3Bb,EAAUc,aAAY,SAACC,GACrBR,EAAUS,YAAYhB,EAAUiB,KAChCL,EAAQG,MAEVf,EAAUkB,kBAAiB,SAACC,GAC1BZ,EAAUS,YAAYhB,EAAUiB,KAChCJ,EAAOM,MAETZ,EAAUa,YAAYpB,EAAUqB,SAASJ,KACzCjB,EAAUsB,KAAKvB,QAKrBX,EAAImC,UAAUC,iBAAmB1B"}